This is a very experimental database connection pooling implementation for Django.

This implementation requires use of ticket 19274's work, available
from http://github.com/akaariai/django.git, branch ticket_19274.

Usage is simple. When you have currently this in settings.py:
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': ...,
    },
    ...
}
alter it to:
DATABASES = {
    'default': {
        'ENGINE': 'django_pooled',
        'NAME': ...,
        'OPTIONS': {
            'WRAPS': 'django.db.backends.sqlite3',
        }
    },
    ...
}

There is one additional setting one can define in OPTIONS:
ON_CONNECT -> String which defines what SQL to run on connections
fetched from the pool. The SQL is run to make sure the connection
is actually working. The default is "SELECT 1".

On disconnect rollback is called, nothing else is done.

The Django's test suite is passing on all core backends (on Oracle
you need to use ON_CONNECT = SELECT 1 FROM DUAL). Gis backends aren't
yet upgraded.
